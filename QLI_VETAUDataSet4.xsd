<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="QLI_VETAUDataSet4" targetNamespace="http://tempuri.org/QLI_VETAUDataSet4.xsd" xmlns:mstns="http://tempuri.org/QLI_VETAUDataSet4.xsd" xmlns="http://tempuri.org/QLI_VETAUDataSet4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="QLI_VETAUConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="QLI_VETAUConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BTN_QLIVETAU.Properties.Settings.GlobalReference.Default.QLI_VETAUConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TAUTableAdapter" GeneratorDataComponentClassName="TAUTableAdapter" Name="TAU" UserDataComponentName="TAUTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QLI_VETAUConnectionString (Settings)" DbObjectName="QLI_VETAU.dbo.TAU" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TAU] WHERE (([MaTau] = @Original_MaTau) AND ([TenTau] = @Original_TenTau) AND ([SoToa] = @Original_SoToa))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaTau" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaTau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenTau" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SoToa" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SoToa" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TAU] ([TenTau], [SoToa]) VALUES (@TenTau, @SoToa);
SELECT MaTau, TenTau, SoToa FROM TAU WHERE (MaTau = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenTau" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTau" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SoToa" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SoToa" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaTau, TenTau, SoToa FROM dbo.TAU</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TAU] SET [TenTau] = @TenTau, [SoToa] = @SoToa WHERE (([MaTau] = @Original_MaTau) AND ([TenTau] = @Original_TenTau) AND ([SoToa] = @Original_SoToa));
SELECT MaTau, TenTau, SoToa FROM TAU WHERE (MaTau = @MaTau)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenTau" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTau" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SoToa" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SoToa" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaTau" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaTau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenTau" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SoToa" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SoToa" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MaTau" ColumnName="MaTau" DataSourceName="QLI_VETAU.dbo.TAU" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MaTau" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MaTau" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaTau" DataSetColumn="MaTau" />
              <Mapping SourceColumn="TenTau" DataSetColumn="TenTau" />
              <Mapping SourceColumn="SoToa" DataSetColumn="SoToa" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="QLI_VETAUDataSet4" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="QLI_VETAUDataSet4" msprop:Generator_DataSetName="QLI_VETAUDataSet4">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TAU" msprop:Generator_RowEvHandlerName="TAURowChangeEventHandler" msprop:Generator_RowDeletedName="TAURowDeleted" msprop:Generator_RowDeletingName="TAURowDeleting" msprop:Generator_RowEvArgName="TAURowChangeEvent" msprop:Generator_TablePropName="TAU" msprop:Generator_RowChangedName="TAURowChanged" msprop:Generator_RowChangingName="TAURowChanging" msprop:Generator_TableClassName="TAUDataTable" msprop:Generator_RowClassName="TAURow" msprop:Generator_TableVarName="tableTAU" msprop:Generator_UserTableName="TAU">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaTau" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="MaTau" msprop:Generator_ColumnPropNameInTable="MaTauColumn" msprop:Generator_ColumnVarNameInTable="columnMaTau" msprop:Generator_UserColumnName="MaTau" type="xs:int" />
              <xs:element name="TenTau" msprop:Generator_ColumnPropNameInRow="TenTau" msprop:Generator_ColumnPropNameInTable="TenTauColumn" msprop:Generator_ColumnVarNameInTable="columnTenTau" msprop:Generator_UserColumnName="TenTau">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SoToa" msprop:Generator_ColumnPropNameInRow="SoToa" msprop:Generator_ColumnPropNameInTable="SoToaColumn" msprop:Generator_ColumnVarNameInTable="columnSoToa" msprop:Generator_UserColumnName="SoToa" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TAU" />
      <xs:field xpath="mstns:MaTau" />
    </xs:unique>
  </xs:element>
</xs:schema>